#!/bin/sh
# configure script for bsdsum
# (c) 2022-2023, Nicolas Provost <dev AT npsoft DOT fr>
# BSD license (see file COPYING)


echo "bsdsum configure script"
echo "-----------------------"

OS=$(uname -s 2>/dev/null)
if test -z "${OS}"
then
	echo "unable to determine the operating system"
	exit 1
fi
ARCH=$(uname -m)
VER=$(cat version)
C_FLAGS="-Iinclude -Iexternal/libcrypto -Iexternal/blake"
C_FLAGS="${C_FLAGS} -Iexternal/blake2 -Iexternal/blake3"
C_FLAGS="${C_FLAGS} -DBLAKE3_NO_AVX512 -DBLAKE3_NO_AVX2"
C_FLAGS="${C_FLAGS} -DBLAKE3_NO_SSE41 -DBLAKE3_NO_SSE2"
C_FLAGS="${C_FLAGS} -Iexternal/whirlpool "
C_FLAGS="${C_FLAGS} -fstack-protector"
PREFIX=/usr/local
CC=
OPTS=-O2
LF=no
WIDTH=32
DEBUG=no

case "${ARCH}" in
	*arm64*) WIDTH=64 ;;
	*x86_64*) WIDTH=64 ;;
	*sparc64*) WIDTH=64 ;;
	*mips64*) WIDTH=64 ;;
esac

help()
{
	echo "arguments:"
	echo "  --prefix=    set prefix (default /usr/local)"
	echo "  --cc=        set compiler (gcc, clang..)"
	echo "  --debug      enable debugging"
	echo
}

rm -f config.mk 
if test -z "$(which clang)"
then
	CC=gcc
else
	CC=clang
fi

rm -f include/os_endian.h

case "${OS}" in
	*linux*|*Linux*)
		OS=LINUX
		ln -s /usr/include/endian.h include/os_endian.h
		C_FLAGS="${C_FLAGS} -D_FILE_OFFSET_BITS=64"
		LF=yes
		;;
	NetBSD|OpenBSD|FreeBSD|DragonFly)
		ln -s /usr/include/sys/endian.h include/os_endian.h
		OS=BSD
		;;
	*)
		echo "OS not supported"
		exit 1
		;;
esac

if test "${LF}" = "yes"
then
	C_FLAGS="${C_FLAGS} -DBSDSUM_LF"
fi

for A in $@
do
	case "${A}" in
	help)
		help
		;;
	--prefix=*)
		PREFIX=${A#--prefix=}
		;;
	--cc=*)
		CC=${A#--cc=}
		;;
	--debug)
		DEBUG=yes
		C_FLAGS="${C_FLAGS} -BSDSUM_DEBUG -g"
		;;
	*)
		echo "unknown argument ${A}"
		exit 1
		;;
	esac
done

TEST=$($CC --version 2>/dev/null)
if test -z "$TEST"
then
	echo "no working C compiler found"
	exit 1
fi

echo "- os is ${OS} (${WIDTH}-bit)"
echo "- prefix is ${PREFIX}"
echo "- compiler is ${CC}"
echo "- large files support: ${LF}"
echo "- debugging: ${DEBUG}"
echo
echo "use 'make' to build out/bsdsum and run tests"
echo "use 'make static' to build the static version out/bsdsum-static"
echo "use 'make install [DESTDIR=] ' to install bsdsum"
echo "use 'make check' to run tests"
echo

echo "OS := ${OS}" > config.mk
echo "VER := ${VER}" >> config.mk
echo "CC := ${CC}" >> config.mk
echo "C_FLAGS := ${C_FLAGS}" >> config.mk
echo "OPTS := ${OPTS}" >> config.mk
echo "PREFIX := ${PREFIX}" >> config.mk
echo "DEBUG := ${DEBUG}" >> config.mk

find . -name '*.o' -delete
mkdir -p out
rm -f out/*.o out/bsdsum out/bsdsum-static

